// this program has M iterations, in each iteration:
//   a new s is retrieved and sum from 1 to s is computed & printed
//   address of s starts from K, increase by 1 in each iteration
39 30 9  // data-size = 6 + M
9 35
6 34  // s' = s
2 33
3 34
6 33  // sum = sum + s'
2 34
3 31
6 34  // s = s - 1 
5 34
5 2   // if s' > 0 goto 2, inner loop
7 33  // if s' == 0, summed, print sum
2 32
3 31
6 32  // M = M - 1
2 35
3 30
6 35  // K = K + 1, move to next s
2 33
4 31
3 33
6 33  // -1*sum + sum = 0, store to sum
5 32
5 0   // if M > 0 goto 0
1 0
1 0
1 0
1 0
1 0
1 0
1 0
// ====== remove comments
1
-1
3    // M itertions
0    // sum
0    // s', current to-be-summed number, a copy
36    // K: address of to-be-summed number, increasing
10    // s, from here, are the original to-be-summed numbers
8
5
